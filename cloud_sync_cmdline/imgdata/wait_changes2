#!/bin/bash

source /root/VARIABLES

# remote poll interval ( 30 sec )
remotePollIntervalSec=30

# force sync after local sync ( 5 min ) prevent untracking of remote changes during local->remote sync
forceSyncAfterLocalSyncSec=300

# force sync interval ( 2hr )
forceSyncIntervalSec=7200

touch /log
origlog="$(cat /log)"

touch /root/res_etag.xml
origetag="$(cat /root/res_etag.xml)"

/scripts/update_etag

localchanged=0
remotechanged=0

while true; do
	echo "syncing..."
	/scripts/sync.sh
	echo "done."

	if [ "$remotechanged" == "1" ]; then
		origlog="$(cat /log)"
		remotechanged=0
	fi

	if [ "$localchanged" == "1" ]; then
		/scripts/update_etag
	fi

	start=$(date +%s)

	while true; do
		elapsed=$(($(date +%s) - $start))

		if (( $elapsed >= $remotePollIntervalSec )); then
			/scripts/update_etag

			nowetag="$(cat /root/res_etag.xml)"
			if [ "$nowetag" != "$origetag" ]; then
				origetag="$nowetag"
				echo "---> detected remote changes"
				echo "  $(date)"
				remotechanged=1
				break;
			fi
		fi

		if (( ( $localchanged == 1 ) && ( $elapsed >= $forceSyncAfterLocalSyncSec ) )); then
			echo "---> force sync after local change"
			echo "  $(date)"
			localchanged=0
			break;
		fi

		if (( $elapsed >= $forceSyncIntervalSec )); then
			echo "---> force sync"
			echo "  $(date)"
			localchanged=0
			break;
		fi

		nowlog="$(cat /log)"

		# intercept changes from inotifywait /script/waitchanges process
		if [ "$nowlog" != "$origlog" ]; then
			origlog="$nowlog"
			localchanged=1
			echo "---> detected local changes"
			echo "  $nowlog"
			break;
		fi

		sleep 1

	done
done
